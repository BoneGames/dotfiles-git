[alias]
    # one-line log
    l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

    a = add
    ai = "!f() { git status -s | sed s/^...// | ipt -m -M 'Select files to add:' | xargs git add; git s; }; f"

    ap = add -p
    c = commit --verbose
    ca = commit -a --verbose
    cm = commit -m
    cam = commit -a -m
    m = commit --amend --verbose
    camp = "!f() { git commit -a -m \"$1\"; git push; }; f"
    r = remote -v

    d = diff
    ds = diff --stat
    dc = diff --cached

    s = status
    co = checkout
    cob = checkout -b

    # list branches sorted by last modified
    b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
    bls = ls-remote --heads
    bb = for-each-ref --format='%(refname:short) -> %(upstream:short)' refs/heads
    bd = branch -D
    tree = log --oneline --graph --all --decorate --abbrev-commit

    pp = "!git pull --no-edit; git push"
    cln = clean -df

    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"

    #  add a remote pointing to another developer's fork
    ra = "!f() { \
        git remote add $1 git@github.com:stemn/$2.git; \
      }; f"

    # search the git history for a string
    search = "!f() { \
        git rev-list --all | GIT_PAGER=cat xargs git grep \"$@\"; \
      }; f"

    # git command line dashboard
    dashboard = "!f() { \
        grv -repoFilePath ${STEMN_BACKEND-/stemn/stemn-backend} \"$@\"; \
      }; f"

[push]
    default = simple

[core]
    safecrlf = false
    pager = diff-so-fancy | less -RFX

[sequence]
    editor = rebase-editor

[color]
    ui = true

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[color "diff"]
    meta = yellow
    frag = magenta bold
    commit = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse
